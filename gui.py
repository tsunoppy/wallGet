#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.6 on Tue Jan 18 22:31:54 2022
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
import matplotlib
from matplotlib.figure import Figure
from matplotlib.backends.backend_wxagg import FigureCanvasWxAgg as FigureCanvas
# end wxGlade


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((884, 720))
        
        # Menu Bar
        self.frame_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.ID_ANY, "&New", "")
        wxglade_tmp_menu.Append(wx.ID_ANY, "&Save", "")
        wxglade_tmp_menu.Append(wx.ID_ANY, "&Export", "")
        wxglade_tmp_menu.Append(wx.ID_ANY, "&Save as", "")
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(wx.ID_ANY, "E&xit", "")
        self.frame_menubar.Append(wxglade_tmp_menu, "&File")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.ID_ANY, "&about fibGet", "")
        self.frame_menubar.Append(wxglade_tmp_menu, "&About")
        self.SetMenuBar(self.frame_menubar)
        # Menu Bar end
        
        # Tool Bar
        self.frame_toolbar = wx.ToolBar(self, -1, style=wx.TB_DEFAULT_STYLE)
        self.SetToolBar(self.frame_toolbar)
        # Tool Bar end
        self.text_ctrl_2 = wx.TextCtrl(self, wx.ID_ANY, "./sample.csv")
        self.button_2 = wx.Button(self, wx.ID_ANY, u"â€¦")
        figure = self.matplotlib_figure = Figure(tight_layout=True)
        # 1x1 grid, first subplot
        self.matplotlib_axes = figure.add_subplot(111)
        self.matplotlib_canvas = FigureCanvas(self, wx.ID_ANY, figure)
        self.panel_1 = wx.Panel(self, wx.ID_ANY)
        self.text_ctrl_awx = wx.TextCtrl(self.panel_1, wx.ID_ANY, "", style=wx.BORDER_NONE | wx.TE_READONLY | wx.TE_RIGHT)
        self.text_ctrl_awy = wx.TextCtrl(self.panel_1, wx.ID_ANY, "", style=wx.BORDER_NONE | wx.TE_READONLY | wx.TE_RIGHT)
        self.text_ctrl_px = wx.TextCtrl(self.panel_1, wx.ID_ANY, "", style=wx.BORDER_NONE | wx.TE_READONLY | wx.TE_RIGHT)
        self.text_ctrl_py = wx.TextCtrl(self.panel_1, wx.ID_ANY, "", style=wx.BORDER_NONE | wx.TE_READONLY | wx.TE_RIGHT)
        self.button_7 = wx.Button(self, wx.ID_ANY, "Run")
        self.button_5 = wx.Button(self, wx.ID_ANY, "Save")
        self.button_4 = wx.Button(self, wx.ID_ANY, "Cancel")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.OnChooseOutputFile, self.button_2)
        self.Bind(wx.EVT_BUTTON, self.OnExec, self.button_7)
        self.Bind(wx.EVT_BUTTON, self.OnSave, self.button_5)
        self.Bind(wx.EVT_BUTTON, self.OnCancel, self.button_4)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("WallGet")
        self.SetBackgroundColour(wx.Colour(47, 47, 47))
        self.SetForegroundColour(wx.Colour(0, 0, 0))
        self.frame_toolbar.Realize()
        self.matplotlib_canvas.SetMinSize((50, 50))
        self.text_ctrl_awx.SetBackgroundColour(wx.Colour(47, 47, 47))
        self.text_ctrl_awx.SetForegroundColour(wx.Colour(192, 192, 192))
        self.text_ctrl_awy.SetBackgroundColour(wx.Colour(47, 47, 47))
        self.text_ctrl_awy.SetForegroundColour(wx.Colour(192, 192, 192))
        self.text_ctrl_px.SetBackgroundColour(wx.Colour(47, 47, 47))
        self.text_ctrl_px.SetForegroundColour(wx.Colour(192, 192, 192))
        self.text_ctrl_py.SetBackgroundColour(wx.Colour(47, 47, 47))
        self.text_ctrl_py.SetForegroundColour(wx.Colour(192, 192, 192))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_13 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_10 = wx.BoxSizer(wx.VERTICAL)
        sizer_6 = wx.BoxSizer(wx.VERTICAL)
        sizer_12 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_11 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        label_3 = wx.StaticText(self, wx.ID_ANY, "Control file", style=wx.ALIGN_CENTER)
        label_3.SetForegroundColour(wx.Colour(192, 192, 192))
        sizer_4.Add(label_3, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
        sizer_4.Add(self.text_ctrl_2, 2, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
        sizer_4.Add(self.button_2, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
        sizer_1.Add(sizer_4, 0, wx.EXPAND, 0)
        sizer_10.Add(self.matplotlib_canvas, 2, wx.ALL | wx.EXPAND, 5)
        label_2 = wx.StaticText(self.panel_1, wx.ID_ANY, "Result")
        label_2.SetForegroundColour(wx.Colour(192, 192, 192))
        sizer_6.Add(label_2, 1, wx.ALL, 1)
        label_6 = wx.StaticText(self.panel_1, wx.ID_ANY, "Awx=")
        label_6.SetMinSize((50, 16))
        label_6.SetForegroundColour(wx.Colour(192, 192, 192))
        sizer_11.Add(label_6, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_11.Add(self.text_ctrl_awx, 0, 0, 0)
        label_7 = wx.StaticText(self.panel_1, wx.ID_ANY, "mm2")
        label_7.SetMinSize((100, 16))
        label_7.SetForegroundColour(wx.Colour(192, 192, 192))
        sizer_11.Add(label_7, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        label_14 = wx.StaticText(self.panel_1, wx.ID_ANY, "Awy=")
        label_14.SetMinSize((50, 16))
        label_14.SetForegroundColour(wx.Colour(192, 192, 192))
        sizer_11.Add(label_14, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_11.Add(self.text_ctrl_awy, 0, 0, 0)
        label_15 = wx.StaticText(self.panel_1, wx.ID_ANY, "mm2")
        label_15.SetForegroundColour(wx.Colour(192, 192, 192))
        sizer_11.Add(label_15, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_6.Add(sizer_11, 0, wx.EXPAND, 0)
        label_8 = wx.StaticText(self.panel_1, wx.ID_ANY, "px=")
        label_8.SetMinSize((50, 16))
        label_8.SetForegroundColour(wx.Colour(192, 192, 192))
        sizer_12.Add(label_8, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_12.Add(self.text_ctrl_px, 0, 0, 0)
        label_9 = wx.StaticText(self.panel_1, wx.ID_ANY, "m")
        label_9.SetMinSize((100, 16))
        label_9.SetForegroundColour(wx.Colour(192, 192, 192))
        sizer_12.Add(label_9, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        label_16 = wx.StaticText(self.panel_1, wx.ID_ANY, "py=")
        label_16.SetMinSize((50, 16))
        label_16.SetForegroundColour(wx.Colour(192, 192, 192))
        sizer_12.Add(label_16, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_12.Add(self.text_ctrl_py, 0, 0, 0)
        label_17 = wx.StaticText(self.panel_1, wx.ID_ANY, "m")
        label_17.SetForegroundColour(wx.Colour(192, 192, 192))
        sizer_12.Add(label_17, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_6.Add(sizer_12, 0, wx.EXPAND, 0)
        self.panel_1.SetSizer(sizer_6)
        sizer_10.Add(self.panel_1, 0, wx.ALL | wx.EXPAND, 5)
        sizer_7.Add(sizer_10, 2, wx.ALL | wx.EXPAND, 0)
        sizer_1.Add(sizer_7, 2, wx.EXPAND, 0)
        sizer_13.Add((350, 20), 5, 0, 0)
        sizer_13.Add(self.button_7, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 1)
        sizer_13.Add(self.button_5, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 1)
        sizer_13.Add(self.button_4, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 1)
        sizer_1.Add(sizer_13, 0, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def OnChooseOutputFile(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'OnChooseOutputFile' not implemented!")
        event.Skip()

    def OnExec(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'OnExec' not implemented!")
        event.Skip()

    def OnSave(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'OnSave' not implemented!")
        event.Skip()

    def OnCancel(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'OnCancel' not implemented!")
        event.Skip()

# end of class MyFrame

class MyApp(wx.App):
    def OnInit(self):
        self.frame = MyFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
